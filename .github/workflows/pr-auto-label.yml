name: PR Housekeeping

on:
  pull_request:
    types: [opened, reopened, synchronize, ready_for_review]

permissions:
  contents: read
  pull-requests: write
  issues: write

jobs:
  ensure-default-label:
    name: Ensure default PR label exists
    runs-on: ubuntu-latest
    steps:
      - name: Create label if missing
        uses: actions/github-script@v7
        with:
          script: |
            const labelName = 'status: review-needed';
            const { owner, repo } = context.repo;

            // Check if label exists
            try {
              await github.rest.issues.getLabel({ owner, repo, name: labelName });
            } catch (e) {
              if (e.status === 404) {
                // Create label
                await github.rest.issues.createLabel({
                  owner,
                  repo,
                  name: labelName,
                  color: 'BFDADC',
                  description: 'Pull request is ready for review.'
                });
              } else {
                throw e;
              }
            }

  add-default-label:
    name: Add default PR label
    runs-on: ubuntu-latest
    needs: ensure-default-label
    steps:
      - name: Add label to PR if not present
        uses: actions/github-script@v7
        with:
          script: |
            const labelName = 'status: review-needed';
            const { owner, repo } = context.repo;
            const pr = context.payload.pull_request;
            if (!pr) {
              core.info('No pull_request in context.');
              return;
            }
            const current = (pr.labels || []).map(l => l.name);
            if (current.includes(labelName)) {
              core.info(`Label already present: ${labelName}`);
              return;
            }
            await github.rest.issues.addLabels({
              owner,
              repo,
              issue_number: pr.number,
              labels: [labelName]
            });
